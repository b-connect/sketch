/* ------------------------------------ *\
  #BREAKPOINTS
\* ------------------------------------ */
@import '../node_modules/foundation-sites/scss/util/unit';
@import '../node_modules/foundation-sites/scss/util/breakpoint.scss';

@function mediaquerys($key) {
  @if map-has-key($breakpoints, $key) {
    @return map-get($breakpoints, $key) / 1px ;
  }

  @warn 'Unknown `#{$key}` in $breakpoints.';
  @return null;
}

@mixin -zf-each-breakpoint($small: true, $auto-insert-breakpoints: true) {
  $list: $breakpoint-classes;

  @if not $small {
    $list: sl-remove($list, $-zf-zero-breakpoint);
  }

  @each $name in $list {
    $old-zf-size: null;
    @if global-variable-exists(-zf-size) {
      $old-zf-size: $-zf-size;
    }
    $-zf-size: $name !global;

    @if $auto-insert-breakpoints {
      @include breakpoint($name) {
        @content;
      }
    }
    @else {
      @content;
    }

    $-zf-size: $old-zf-size !global;
  }
}

@mixin -zf-breakpoint-value(
  $name: auto,
  $map: null
) {
  @if $name == auto and type-of($map) == 'map' {
    @each $k, $v in $map {
      @include breakpoint($k) {
        @include -zf-breakpoint-value($v, $map) {
          @content;
        }
      }
    }
  }
  @else {
    // breakpoint name
    @if type-of($name) == 'string' {
      $name: -zf-get-bp-val($map, $name);
    }

    // breakpoint value
    $-zf-bp-value: $name !global;
    @content;
  }
}
